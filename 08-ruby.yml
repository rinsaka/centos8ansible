---
- hosts: localhost
  become: yes
  vars:
    - ruby_version: 3.0.0
    - src_dir: src
    - work_dir: work

  tasks:
    - name: install ruby dependencies
      dnf:
        name: "{{ packages }}"
        state: present
        enablerepo: remi,epel
      vars:
        packages:
        - gcc
        - openssl
        - openssl-devel
        - rpm-build
        - gcc-c++
        - bzip2
        - bzip2-devel
        - libtool
        - zlib
        - zlib-devel
        - httpd-devel
        - openssl-devel
        - curl-devel
        - ncurses-devel
        - gdbm-devel
        - readline
        - readline-devel
        - sqlite
        - sqlite-devel
        - libyaml
        - libffi-devel
        - bison

    - name: check rbenv installed
      command: test -x /home/vagrant/.rbenv
      register: rbenv_present
      become: no
      failed_when: rbenv_present.rc not in [0, 1]
    - name: git clone rbenv
      git: repo=https://github.com/sstephenson/rbenv.git dest=/home/vagrant/.rbenv
      when: rbenv_present.rc == 1
      become: no
    - name: update bash_profile
      copy: src=bash_profile.custom dest=/home/vagrant/.bash_profile backup=yes
      become: no

    - name: check ruby-build installed
      command: test -x /home/vagrant/.rbenv/plugins/ruby-build
      register: rbuild_present
      become: no
      failed_when: rbuild_present.rc not in [0, 1]
    - name: git clone ruby-build
      git: repo=https://github.com/sstephenson/ruby-build.git dest=/home/vagrant/.rbenv/plugins/ruby-build
      when: rbuild_present.rc == 1
      become: no

    - name: update rbenv
      command: git pull --rebase chdir=/home/vagrant/.rbenv
      become: no
    - name: update ruby-build
      command: git pull --rebase chdir=/home/vagrant/.rbenv/plugins/ruby-build
      become: no

    - name: check ruby installed
      shell: /bin/bash -lc "rbenv versions | grep {{ruby_version}}"
      register: ruby_installed
      become: no
      failed_when: ruby_installed.rc not in [0, 1]
    - name: install ruby
      shell: /bin/bash -lc "rbenv install {{ruby_version}} && rbenv rehash && rbenv global {{ruby_version}}"
      when: ruby_installed.rc == 1
      become: no

    # 一旦古いバージョンの nodejs, npm をインストール
    - name: install nodejs
      dnf: name=nodejs state=latest
    - name: install npm
      dnf: name=npm state=latest
    - name: install n
      shell: /bin/bash -lc "npm install -g n"

    # n を使って最新版の nodejs, npm をインストール
    - name: insall stable nodejs and npm by n
      shell: /bin/bash -lc "sudo /usr/local/bin/n stable"

    # 古い nodejs, npm を削除
    - name: remove previous nodejs
      dnf: name=nodejs state=absent
    - name: remove previous npm
      dnf: name=npm state=absent

    # yarn
    - name: install yarn.repo
      shell: /bin/bash -lc "curl -sL https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo"
    - name: install yarn
      dnf: name=yarn state=present

  handlers:
